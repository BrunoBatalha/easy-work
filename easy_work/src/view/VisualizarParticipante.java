/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import controller.ParticipanteDao;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

import model.Participante;
import outras.Principal;
import outras.util;

public class VisualizarParticipante extends javax.swing.JDialog {

    /**
     * Creates new form VisualizarParticipante
     */
    private String CPF;
    private String idade;
    private String dtNasc;
    Participante p;
    public VisualizarParticipante(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btnImprimir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCPF = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        comboRegiao = new javax.swing.JComboBox<>();
        comboForm = new javax.swing.JComboBox<>();
        txtDtNasc = new javax.swing.JFormattedTextField();
        btnEditar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(5, 103, 49));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Dados pessoais");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(14, 14, 14))
        );

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        jLabel1.setText("CPF:");

        jLabel2.setText("Nome:");

        jLabel3.setText("Email:");

        jLabel4.setText("Formação:");

        jLabel5.setText("Endereço:");

        jLabel6.setText("Região:");

        jLabel7.setText("Data de nascimento:");

        txtCPF.setEditable(false);
        txtCPF.setEnabled(false);

        txtNome.setEditable(false);
        txtNome.setEnabled(false);

        txtEmail.setEditable(false);
        txtEmail.setEnabled(false);

        txtEndereco.setEditable(false);
        txtEndereco.setEnabled(false);

        comboRegiao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Oeste", "Centro-Oeste", "Norte", "Centro-Sul", "Leste", "Sul" }));
        comboRegiao.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comboRegiao.setEnabled(false);

        comboForm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ensino médio", "Ensino médio Técnico Integrado", "Graduação", "Pós-Graduação" }));
        comboForm.setEnabled(false);

        txtDtNasc.setEditable(false);
        try {
            txtDtNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDtNasc.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtCPF, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtNome, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(comboRegiao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEndereco, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(comboForm, javax.swing.GroupLayout.Alignment.LEADING, 0, 303, Short.MAX_VALUE))
                    .addComponent(txtDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboRegiao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImprimir))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir)
                    .addComponent(btnEditar)
                    .addComponent(btnSalvar)
                    .addComponent(btnCancelar))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        //imprimir();
        imprimirPDF();
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editar(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            salvar();
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(VisualizarParticipante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        util.trocarTela(Principal.JPANEL_MAIN, new Listar());
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisualizarParticipante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisualizarParticipante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisualizarParticipante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisualizarParticipante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VisualizarParticipante dialog = new VisualizarParticipante(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> comboForm;
    private javax.swing.JComboBox<String> comboRegiao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JFormattedTextField txtDtNasc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables

    public void exibir() {
        preencherCampos();
        btnCancelar.setVisible(false);
        btnSalvar.setVisible(false);
        setVisible(true);
    }

    public void setCPF(String CPF) {
        this.CPF = CPF;
    }

    private void preencherCampos() {
        ParticipanteDao pdao = new ParticipanteDao();
        try {
            p = pdao.pesquisarCpf(CPF);
            dtNasc = util.formatarData(p.getDataNascimento());
            idade = util.calcularIdade(util.getDataAtual(), p.getDataNascimento().getTime()) + "";

            txtCPF.setText(p.getCpf());
            txtNome.setText(p.getNome());
            txtEmail.setText(p.getEmail());
            txtEndereco.setText(p.getEndereco());
            txtDtNasc.setText(dtNasc);
            comboForm.setSelectedItem(p.getFormacao());
            comboRegiao.setSelectedItem(p.getRegiao());
        } catch (SQLException ex) {
            Logger.getLogger(VisualizarParticipante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void imprimir() {

        String tituloPDF = "dados-de-" + p.getNome().replace(" ", "-");
        try {
            File file = File.createTempFile(tituloPDF, ".pdf");
            JFileChooser chooser = new JFileChooser();
            chooser = new JFileChooser();
            chooser.setCurrentDirectory(file);
            chooser.setSelectedFile(file);
//            chooser.setFileFilter(new ExtensionFileFilter("Arquivo PDF", "pdf"));
            chooser.setAcceptAllFileFilterUsed(false);
            chooser.setMultiSelectionEnabled(false);
            String caminho = "";

            int retorno = chooser.showSaveDialog(null);
            if (retorno == JFileChooser.APPROVE_OPTION) {
                caminho = chooser.getSelectedFile().getAbsolutePath();
            }
            if (file != null) {
                if (!caminho.equals("")) {
                    boolean ok = file.renameTo(new File(caminho));
                    if (ok) {
                        gerarPDF(caminho);
                        System.out.println("Arquivo renomeado com sucesso " + caminho);
                    } else {
                        System.out.println("Erro");
                    }
                } else {
                    //throw new FileNaoSelecionadoException();
                }

            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(VisualizarParticipante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException | DocumentException ex) {
            Logger.getLogger(VisualizarParticipante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void imprimirPDF() {
        // Crie um seletor de arquivos
        String diretorioBase = System.getProperty("user.home");
        File f = new File(diretorioBase);
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Selecione local para salvar");
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setCurrentDirectory(f);
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(new FileNameExtensionFilter("Arquivo PDF", ".pdf"));

        String caminho = "";
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String tituloPDF = "dados-de-" + p.getNome().replace(" ", "-");
            caminho = fc.getSelectedFile().getAbsolutePath() + "\\" + tituloPDF + ".pdf";
            try {
                gerarPDF(caminho);

            } catch (DocumentException | IOException ex) {
                Logger.getLogger(VisualizarParticipante.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        System.out.println(returnVal);
    }

    private void gerarPDF(String caminho) throws DocumentException, FileNotFoundException, IOException {
        Document doc = new Document();
        PdfWriter.getInstance(doc, new FileOutputStream(caminho));
        doc.open();
        Paragraph pr = new Paragraph("Dados");
        pr.setAlignment(1);
        doc.add(pr);

        pr = new Paragraph(" ");
        doc.add(pr);

        PdfPTable table = new PdfPTable(2);

        PdfPCell cell = new PdfPCell(new Paragraph("NOME:"));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph(p.getNome()));
        table.addCell(cell);

        cell = new PdfPCell(new Paragraph("EMAIL:"));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph(p.getEmail()));
        table.addCell(cell);

        cell = new PdfPCell(new Paragraph("CPF:"));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph(p.getCpf()));
        table.addCell(cell);

        cell = new PdfPCell(new Paragraph("ENDEREÇO:"));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph(p.getEmail()));
        table.addCell(cell);

        cell = new PdfPCell(new Paragraph("DATA DE NASCIMENTO:"));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph(dtNasc));
        table.addCell(cell);

        cell = new PdfPCell(new Paragraph("IDADE:"));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph(idade));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph("REGIÃO: "));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph(p.getRegiao()));
        table.addCell(cell);

        cell = new PdfPCell(new Paragraph("FORMAÇÃO: "));
        table.addCell(cell);
        cell = new PdfPCell(new Paragraph(p.getFormacao()));
        table.addCell(cell);

        doc.add(table);
        doc.close();
        Desktop.getDesktop().open(new File(caminho));
    }

    private void editar(boolean valor) {
        txtNome.setEditable(valor);
        txtNome.setEnabled(valor);
        txtEmail.setEditable(valor);
        txtEmail.setEnabled(valor);
        txtEndereco.setEditable(valor);
        txtEndereco.setEnabled(valor);
        comboForm.setEnabled(valor);
        comboRegiao.setEnabled(valor);
        txtDtNasc.setEditable(valor);
        txtDtNasc.setEnabled(valor);
        btnCancelar.setVisible(valor);
        btnSalvar.setVisible(valor);
    }

    private void salvar() throws SQLException, ParseException {

        dtNasc = txtDtNasc.getText();
        idade = util.calcularIdade(util.getDataAtual(), p.getDataNascimento().getTime()) + "";

        p.setNome(txtNome.getText());
        p.setEmail(txtEmail.getText());
        p.setEndereco(txtEndereco.getText());
        p.setFormacao(comboForm.getSelectedItem() + "");
        p.setRegiao(comboRegiao.getSelectedItem() + "");
        p.setDataNascimento(util.converteEmMilissegundos(dtNasc));

        ParticipanteDao dao = new ParticipanteDao();

        if (dao.atualizar(p)) {
            JOptionPane.showMessageDialog(this, "Dados de atualizados com sucesso!");
        }else{
            JOptionPane.showMessageDialog(this, "Falha em atualizar dados!");
        }

        btnCancelar.setVisible(false);
        btnSalvar.setVisible(false);
        editar(false);
    }
    private void cancelar(){
        editar(false);
        preencherCampos();
    }
    
    
}
